{"version":3,"sources":["DUMMY_NOTES.ts","components/Notes/Note.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DUMMY_NOTES","_id","text","link","Note","note","onNoteUpdate","className","onBlur","event","newTextValue","currentTarget","textContent","console","log","updatedNoteObject","contentEditable","suppressContentEditableWarning","href","App","useState","notesList","setNotesList","useEffect","listFromStorageString","localStorage","getItem","listFromStorageArray","JSON","parse","setItem","stringify","updateNoteItem","updatedNote","updatedList","map","noteItem","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAaeA,G,MAXc,CAC3B,CAAEC,IAAK,IAAKC,KAAM,YAAaC,KAAM,wBACrC,CAAEF,IAAK,IAAKC,KAAM,YAAaC,KAAM,wBACrC,CAAEF,IAAK,IAAKC,KAAM,YAAaC,KAAM,wBACrC,CAAEF,IAAK,IAAKC,KAAM,YAAaC,KAAM,wBACrC,CAAEF,IAAK,IAAKC,KAAM,YAAaC,KAAM,wBACrC,CAAEF,IAAK,IAAKC,KAAM,YAAaC,KAAM,wBACrC,CAAEF,IAAK,IAAKC,KAAM,YAAaC,KAAM,wBACrC,CAAEF,IAAK,IAAKC,KAAM,YAAaC,KAAM,0B,sBC8BxBC,EA/BS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAc/B,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEC,OAhBkB,SAACC,GACvB,IAAMC,EAAeD,EAAME,cAAcC,YACzC,GAAIF,IAAiBL,EAAKH,KAA1B,CAGAW,QAAQC,IAAI,qBACZ,IAAMC,EAAwB,2BACzBV,GADyB,IAE5BH,KAAMQ,GAAgB,KAExBJ,EAAaS,KAOTC,iBAAiB,EACjBC,gCAAgC,EAChCV,UAAU,aAJZ,SAMGF,EAAKH,OAER,qBAAKK,UAAU,aAAf,SACE,mBAAGW,KAAMb,EAAKF,KAAd,SAAqBE,EAAKF,aC4BnBgB,MAvDf,WACE,MAAkCC,mBAAgB,IAAlD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACR,IAAMC,EAAwBC,aAAaC,QAAQ,QACnD,GAAIF,EAAuB,CACzB,IAAMG,EAAuBC,KAAKC,MAAML,GACxCF,EAAaK,QAEbL,EAAatB,KAEd,IAEHuB,qBAAU,WACRE,aAAaK,QAAQ,OAAQF,KAAKG,UAAUV,MAC3C,CAACA,IAWJR,QAAQC,IAAIO,GAEZ,IAAMW,EAAiB,SAACC,GACtBpB,QAAQC,IAAI,uCACZD,QAAQC,IAAImB,GACZ,IAAMC,EAAcb,EAAUc,KAAI,SAACC,GACjC,OAAIA,EAASnC,MAAQgC,EAAYhC,IACxBgC,EAEFG,KAETd,EAAaY,IAGf,OACE,qBAAK3B,UAAU,MAAf,SACE,8BACE,qBAAKA,UAAU,aAAf,SACGc,EAAUc,KAAI,SAACC,EAAUC,GACxB,OACE,cAAC,EAAD,CAAM/B,aAAc0B,EAAgB3B,KAAM+B,GAAeC,aCvCxDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dfcca9e3.chunk.js","sourcesContent":["import INote from \"./interfaces/note.interface\";\n\nconst DUMMY_NOTES: INote[] = [\n  { _id: \"1\", text: \"Get a job\", link: \"https://pokewiki.com\" },\n  { _id: \"2\", text: \"Get a job\", link: \"https://pokewiki.com\" },\n  { _id: \"3\", text: \"Get a job\", link: \"https://pokewiki.com\" },\n  { _id: \"4\", text: \"Get a job\", link: \"https://pokewiki.com\" },\n  { _id: \"5\", text: \"Get a job\", link: \"https://pokewiki.com\" },\n  { _id: \"6\", text: \"Get a job\", link: \"https://pokewiki.com\" },\n  { _id: \"7\", text: \"Get a job\", link: \"https://pokewiki.com\" },\n  { _id: \"8\", text: \"Get a job\", link: \"https://pokewiki.com\" },\n];\n\nexport default DUMMY_NOTES;\n","import { FC, FocusEvent } from \"react\";\nimport INote from \"../../interfaces/note.interface\";\nimport \"./Note.css\";\n\ntype Props = {\n  note: INote;\n  onNoteUpdate: Function;\n};\n\nconst Note: FC<Props> = ({ note, onNoteUpdate }) => {\n  const onTextInputBlur = (event: FocusEvent<HTMLDivElement>) => {\n    const newTextValue = event.currentTarget.textContent;\n    if (newTextValue === note.text) {\n      return;\n    }\n    console.log(\"note text changed\");\n    const updatedNoteObject: INote = {\n      ...note,\n      text: newTextValue || \"\",\n    };\n    onNoteUpdate(updatedNoteObject);\n  };\n\n  return (\n    <div className=\"note\">\n      <div\n        onBlur={onTextInputBlur}\n        contentEditable={true}\n        suppressContentEditableWarning={true}\n        className=\"note__text\"\n      >\n        {note.text}\n      </div>\n      <div className=\"note__link\">\n        <a href={note.link}>{note.link}</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Note;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n// import axios from \"axios\";\nimport DUMMY_NOTES from \"./DUMMY_NOTES\";\nimport Note from \"./components/Notes/Note\";\nimport INote from \"./interfaces/note.interface\";\n\nfunction App() {\n  const [notesList, setNotesList] = useState<any[]>([]);\n\n  useEffect(() => {\n    const listFromStorageString = localStorage.getItem(\"note\");\n    if (listFromStorageString) {\n      const listFromStorageArray = JSON.parse(listFromStorageString);\n      setNotesList(listFromStorageArray);\n    } else {\n      setNotesList(DUMMY_NOTES);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"note\", JSON.stringify(notesList));\n  }, [notesList]);\n\n  // const getNotes = async () => {\n  //   try {\n  //     const response = await axios.get(\"http://localhost:3001/notes\");\n  //     setNotesList(response.data.notes);\n  //     console.log(notesList);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n  console.log(notesList);\n\n  const updateNoteItem = (updatedNote: INote) => {\n    console.log(\"value updated in the App componenet\");\n    console.log(updatedNote);\n    const updatedList = notesList.map((noteItem: INote) => {\n      if (noteItem._id === updatedNote._id) {\n        return updatedNote;\n      }\n      return noteItem;\n    });\n    setNotesList(updatedList);\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <div className=\"notes-list\">\n          {notesList.map((noteItem, index) => {\n            return (\n              <Note onNoteUpdate={updateNoteItem} note={noteItem} key={index} />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}